name: Build and Deploy the master branch

on:
  push:
    branches: [ master ]

jobs:
  # We update files if needed
  update-files:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT || github.token }}
          ref: ${{ github.head_ref }}
      - name: Update resources with Maven
        run: mvn -B  generate-resources
      - name: Update files if needed
        uses: stefanzweifel/git-auto-commit-action@v4
  build:
    runs-on: ubuntu-latest
    needs: update-files
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17 and Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
          server-id: sonatype-nexus-snapshots
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.3.6
        with:
          key: fscrawler-docker-cache-${{ runner.os }}-${{ hashFiles('pom.xml') }}
        continue-on-error: true
      - name: Build the project
        run: mvn --batch-mode install -DskipTests -Ddocker.skip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17 and Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
          server-id: sonatype-nexus-snapshots
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.3.6
        with:
          key: fscrawler-docker-cache-${{ runner.os }}-${{ hashFiles('pom.xml') }}
        continue-on-error: true
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Deploy with Maven
        run: mvn --batch-mode deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
